name: Build APK

on:
  push:
    branches:
      - main  # Aciona o build quando houver push na branch "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Instalar dependências do sistema e Python
      run: |
        sudo apt update
        sudo apt install -y build-essential git python3-pip openjdk-17-jdk zip unzip libffi-dev python3-dev python3-setuptools libssl-dev
        pip3 install --upgrade Cython buildozer

    - name: Instalar SDK Android
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        unzip -q commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    - name: Build APK com Buildozer
      env:
        ANDROIDSDK: ${{ github.workspace }}/android-sdk
        ANDROID_HOME: ${{ github.workspace }}/android-sdk
        PATH: ${{ github.workspace }}/.buildozer/android/platform/android-sdk/platform-tools:${{ env.PATH }}
      run: |
        buildozer android debug

    - name: Upload APK como artifact
      uses: actions/upload-artifact@v3
      with:
        name: APK
        path: bin/*.apk
